#include "main.h"
#include <stdarg.h>

/**
 * _printf - produces output according to a format.
 * @format: a character string composed of zero or more directives
 *
 * Return: the number of characters printed excluding the null byte
 */
int _printf(const char *format, ...)
{
	va_list args;
	int counter = 0, i = 0, j;
	f_t specifiers[] = {
		{"c", _print_char},
		{"s", _print_string},
		{"d", _print_decimal},
		{"i", _print_int}
	};

	va_start(args, format);
	while (format[i])
	{
		if (format[i] == 37)
		{
			j = 0;

			while (j < 4)
			{
				if (format[i + 1] == *specifiers[j].type)
				{
					counter += specifiers[j].p(args);
					i += 2;
					break;
				}
				j++;
			}
		}
		else if (format[i] == 37 && format[i + 1] == 37)
		{
			_putchar(37);
			counter++;
			i += 2;
		}
		else
		{
			_putchar(format[i]);
			counter++;
			i++;
		}
	}
	va_end(args);
	return (counter);
}
